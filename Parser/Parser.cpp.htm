<!DOCTYPE html><html><head>
<!-------------HTML Prologue------------!>
<!---Published By: Akshay , 708 S Beech Street , Syracuse .--!>
<!----------------------(315)-289-0056----------------------!>
<!----Package Name:C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\Parser.cpp-----!>
<!-------Published on :04:04:2017 15:35:28-----!>
<link rel=stylesheet type=text/css href="./../Stylesheet.css"/></head> <div class = indent><h4>Dependencies:</h4><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\Executive.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\Executive.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\AbstractSyntaxTree\AbstractSyntaxTree.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\AbstractSyntaxTree\AbstractSyntaxTree.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\GrammerHelpers\GrammerHelpers.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\GrammerHelpers\GrammerHelpers.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\DepAnal.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\DepAnal.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\Executive.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\oodp26\Executive.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\ActionsAndRules.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\ActionsAndRules.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\ConfigureParser.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\ConfigureParser.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\Parser.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Parser\Parser.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\ScopeStack\ScopeStack.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\ScopeStack\ScopeStack.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\SemiExp\itokcollection.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\SemiExp\itokcollection.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\SemiExp\SemiExp.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\SemiExp\SemiExp.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Tokenizer.h\Tokenizer.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Tokenizer.h\Tokenizer.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Tokenizer.h\Tokenizer.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Tokenizer.h\Tokenizer.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Utilities\Utilities.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Utilities\Utilities.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\GrammerHelpers\GrammerHelpers.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\GrammerHelpers\GrammerHelpers.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Logger\Logger.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Logger\Logger.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\AbstractSyntaxTree\AbstractSyntaxTree.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\AbstractSyntaxTree\AbstractSyntaxTree.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\ScopeStack\ScopeStack.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\ScopeStack\ScopeStack.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\XmlDocument\ITokCollection.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\XmlDocument\ITokCollection.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Logger\Logger.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Logger\Logger.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Utilities\Utilities.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\Utilities\Utilities.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileSystem.h.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileSystem.h</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\XmlDocument\XmlElement.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\XmlDocument\XmlElement.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileSystem.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileSystem.cpp</a><br><a href = "C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileMgr.cpp.htm">C:\Users\Ringo\Documents\Visual Studio 2017\Projects\oodp26\FileMgr\FileMgr.cpp</a><br> </div></hr><pre>/////////////////////////////////////////////////////////////////////
//  Parser.cpp - Analyzes C++ language constructs                  //
//  ver 1.5                                                        //
//  Language:      Visual C++ 2008, SP1                            //
//  Platform:      Dell XPS 8900, Windows 10                       //
//  Application:   Prototype for CSE687 Pr1, Sp09, ...             //
//  Author:        Jim Fawcett, CST 4-187, Syracuse University     //
//                 (315) 443-3948, jfawcett@twcny.rr.com           //
/////////////////////////////////////////////////////////////////////

#include &lt;iostream&gt;
#include &lt;string&gt;
#include "../Utilities/Utilities.h"
#include "../Tokenizer.h/Tokenizer.h"
#include "../SemiExp/SemiExp.h"
#include "Parser.h"
#include "ActionsAndRules.h"
#include "ConfigureParser.h"

using namespace CodeAnalysis;
using namespace Scanner;
using namespace Utilities;
using Demo = Logging::StaticLogger&lt;1&gt;;

//----&lt; register parsing rule &gt;--------------------------------

void Parser::addRule(IRule* pRule)
<details><summary>{</summary>
	rules.push_back(pRule);
</details>}
//----&lt; get next ITokCollection &gt;------------------------------

bool Parser::next()
<details><summary>{</summary>
	bool succeeded = pTokColl-&gt;get();

	if (!succeeded)
<details><summary>	{</summary>
		return false;
</details>	}
	std::string debug = pTokColl-&gt;show();
	//GrammarHelper::showParseDemo("get SemiExp: ", *pTokColl);

	pTokColl-&gt;trim();

	return true;
</details>}

//----&lt; parse the SemiExp by applying all rules to it &gt;--------

bool Parser::parse()
<details><summary>{</summary>
	for (size_t i = 0; i&lt;rules.size(); ++i)
<details><summary>	{</summary>
		std::string debug = pTokColl-&gt;show();

		bool doWhat = rules[i]-&gt;doTest(pTokColl);
		if (doWhat == IRule::Stop)
			break;
</details>	}
	return true;
</details>}
//----&lt; register action with a rule &gt;--------------------------

void IRule::addAction(IAction *pAction)
<details><summary>{</summary>
	actions.push_back(pAction);
</details>}
//----&lt; invoke all actions associated with a rule &gt;------------

void IRule::doActions(const ITokCollection* pTokColl)
<details><summary>{</summary>
	if (actions.size() &gt; 0)
		for (size_t i = 0; i&lt;actions.size(); ++i)
			actions[i]-&gt;doAction(pTokColl);
</details>}

//----&lt; test stub &gt;--------------------------------------------

#include "../FileMgr/FileSystem.h"

#ifdef TEST_PARSER

#include &lt;queue&gt;
#include &lt;string&gt;
#define Util StringHelper

int main(int argc, char* argv[])
<details><summary>{</summary>
	Util::Title("Testing Parser Class");
	putline();

	// collecting tokens from files, named on the command line

	if (argc &lt; 2)
<details><summary>	{</summary>
		std::cout
			&lt;&lt; "\n  please enter name of file to process on command line\n\n";
		return 1;
</details>	}

	for (int i = 1; i&lt;argc; ++i)
<details><summary>	{</summary>
		std::string fileSpec = FileSystem::Path::getFullFileSpec(argv[i]);
		std::string msg = "Processing file" + fileSpec;
		Util::title(msg);
		putline();

		ConfigParseForCodeAnal configure;
		Parser* pParser = configure.Build();
		try
<details><summary>		{</summary>
			if (pParser)
<details><summary>			{</summary>
				if (!configure.Attach(argv[i]))
<details><summary>				{</summary>
					std::cout &lt;&lt; "\n  could not open file " &lt;&lt; fileSpec &lt;&lt; std::endl;
					continue;
</details>				}
</details>			}
			else
<details><summary>			{</summary>
				std::cout &lt;&lt; "\n\n  Parser not built\n\n";
				return 1;
</details>			}
			// now that parser is built, use it

			while (pParser-&gt;next())
				pParser-&gt;parse();
			std::cout &lt;&lt; "\n";

			// show AST
			Repository* pRepo = Repository::getInstance();
			ASTNode* pGlobalScope = pRepo-&gt;getGlobalScope();
			TreeWalk(pGlobalScope);
</details>		}
		catch (std::exception& ex)
<details><summary>		{</summary>
			std::cout &lt;&lt; "\n\n    " &lt;&lt; ex.what() &lt;&lt; "\n\n";
</details>		}
</details>	}
	std::cout &lt;&lt; "\n";
</details>}

#endif
</pre></body></html>